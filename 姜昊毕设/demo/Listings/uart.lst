C51 COMPILER V9.01   UART                                                                  03/08/2020 17:02:14 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\output\uart.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil C51\C51\BIN\C51.EXE source\uart.c OMF2 DEBUG PRINT(.\Listings\uart.lst)
                    - TABS(2) PREPRINT(.\Listings\uart.i) OBJECT(.\output\uart.obj)

line level    source

   1          /******************************************************************************
   2          文 件 名   : uart.c
   3          
   4          @file uart.c
   5          @brief at89c51串口驱动
   6          ******************************************************************************/
   7          
   8          /*----------------------------------------------*
   9           * 包含头文件                                   *
  10           *----------------------------------------------*/
  11          #include "main.h"
  12          
  13          #ifdef UART_DEV_DRIVER
  14          
  15          /*----------------------------------------------*
  16           * 宏定义                                 *
  17           *----------------------------------------------*/
  18          
  19          /*----------------------------------------------*
  20           * 枚举定义                            *
  21           *----------------------------------------------*/
  22          
  23          /*----------------------------------------------*
  24           * 结构体定义                              *
  25           *----------------------------------------------*/
  26          
  27          /*----------------------------------------------*
  28           * 外部函数原型说明                                     *
  29           *----------------------------------------------*/
  30          
  31          /*----------------------------------------------*
  32           * 内部函数原型说明                                   *
  33           *----------------------------------------------*/
  34          
  35          /*----------------------------------------------*
  36           * 全局变量                                     *
  37           *----------------------------------------------*/
  38          
  39          /*----------------------------------------------*
  40           * 常量定义                                       *
  41           *----------------------------------------------*/
  42          
  43          
  44          /*---------------------------------------------------------------------------*/
  45          /**
  46          *@brief at89c51串口初始化
  47          *
  48          *
  49          *@param none
  50          *
  51          *@return 
  52          * 
  53          *
  54          *@note 外部晶振11.05926MHz, 波特率9600
C51 COMPILER V9.01   UART                                                                  03/08/2020 17:02:14 PAGE 2   

  55          *
  56          */
  57          void uart_init(void)
  58          {
  59   1        SCON = 0x50;    ///<8位数据,可变波特率
  60   1        TMOD &= 0x0f;   ///<设定定时器1为8位自动重装方式
  61   1        TMOD |= 0x20;   ///<设定定时器1为8位自动重装方式
  62   1        PCON = 0x00;    ///<波特率不加倍
  63   1        TH1 = 0xFD;     ///<设定定时初值
  64   1        TL1 = 0xFD;     ///<设定定时初值
  65   1        TR1 = 1;        ///<启动定时器1
  66   1        REN = 1;        ///<使能接收
  67   1        ES = 1;         ///<打开串口中断
  68   1      }
  69          /*---------------------------------------------------------------------------*/
  70          /**
  71          *@brief 串口阻塞发送一个字符
  72          *
  73          *
  74          *@param ch 要发送的字符
  75          *
  76          *@return 
  77          * 
  78          *
  79          *@note 
  80          *
  81          */
  82          void uart_put_char(uint8_t ch)
  83          {
  84   1        ES = 0;           ///<关闭串口中断
  85   1        TI = 0;           ///<清除中断标志
  86   1        SBUF = ch;        ///<写入数据
  87   1        while (TI == 0){} ///<等待发送完成
  88   1        TI = 0;           ///<清除中断标志
  89   1        ES = 1;           ///<打开串口中断
  90   1      }
  91          /*---------------------------------------------------------------------------*/
  92          /**
  93          *@brief 串口阻塞发送数据
  94          *
  95          *
  96          *@param buf 要发送的字符数组地址
  97          *@param len 要发送的数据长度
  98          *
  99          *@return 
 100          * 
 101          *
 102          *@note 
 103          *
 104          */
 105          void uart_block_send(uint8_t * buf, uint16_t len)
 106          {
 107   1        uint16_t i;
 108   1        
 109   1        ES = 0;  ///<关闭串口中断
 110   1        TI = 0;  ///<清除中断标志
 111   1        
 112   1        for(i = 0; i < len; i++){
 113   2          SBUF = buf[i]; ///<写入数据
 114   2          while (TI == 0){} ///<等待发送完成
 115   2          TI = 0;           ///<清除中断标志
 116   2        }
C51 COMPILER V9.01   UART                                                                  03/08/2020 17:02:14 PAGE 3   

 117   1        ES = 1;             ///<打开串口中断
 118   1      }
 119          /*---------------------------------------------------------------------------*/
 120          /**
 121          *@brief 串口阻塞接收数据
 122          *
 123          *
 124          *@param pData : 接收数据缓存
 125          *@param Size : 接收数据长度
 126          *@param Timeout : 超时时间ms
 127          *
 128          *@return 接收到的字符长度
 129          * 
 130          *
 131          *@note 
 132          *
 133          */
 134          uint16_t uart_block_receive(uint8_t *pData, uint16_t Size, uint32_t Timeout)
 135          {
 136   1        uint32_t tickstart;
 137   1        uint16_t len = 0;
 138   1      
 139   1        if(pData == NULL){
 140   2          return 0;
 141   2        }
 142   1        
 143   1        ES = 0;///<关闭串口中断
 144   1        RI = 0;///<清除标志
 145   1        
 146   1        tickstart = HAL_GetTick();
 147   1      
 148   1        while(len < Size){
 149   2      
 150   2          if(RI){///<接收数据标志
 151   3            RI = 0;///<清除标志
 152   3            pData[len] = SBUF;
 153   3            ++len;
 154   3          }
 155   2          if((uint32_t)(HAL_GetTick() - tickstart) > Timeout){
 156   3            break;
 157   3          }
 158   2          
 159   2        }
 160   1      
 161   1        RI = 0;///<清除标志
 162   1        ES = 1;///<打开串口中断
 163   1        
 164   1        return len;
 165   1      }
 166          /*---------------------------------------------------------------------------*/
 167          /**
 168          *@brief 发送一串字符串
 169          *
 170          *
 171          *@param puts 要发送的字符串
 172          *
 173          *@return 
 174          * 
 175          *
 176          *@note 
 177          *
 178          */
C51 COMPILER V9.01   UART                                                                  03/08/2020 17:02:14 PAGE 4   

 179          void print_string(uint8_t code *puts)
 180          {
 181   1        for (; *puts != 0;  puts++){///<遇到停止符0结束
 182   2          uart_put_char(*puts);
 183   2        }
 184   1      }
 185          /*---------------------------------------------------------------------------*/
 186          /**
 187          *@brief 重定向printf
 188          *
 189          *
 190          *@param c 要发送的字符
 191          *
 192          *@return 0
 193          * 
 194          *
 195          *@note 
 196          *
 197          */
 198          char putchar(char c)
 199          {        
 200   1        uart_put_char((uint8_t)c);///<串口阻塞发送一个字符
 201   1        //soft_serial_putchar((const uint8_t)c);
 202   1        return 0;
 203   1      }
 204          /*---------------------------------------------------------------------------*/
 205          /**
 206          *@brief 串口中断入口
 207          *
 208          *
 209          *@param none
 210          *
 211          *@return 
 212          * 
 213          *
 214          *@note 
 215          *
 216          */
 217          void uart_interrupt() interrupt 4
 218          {  
 219   1        if(RI)///<接收数据标志
 220   1        {
 221   2          RI = 0;///<清除标志
 222   2          uart_rx_irq(SBUF);
 223   2        }
 224   1      
 225   1        if(TI) ///<发送数据标志
 226   1        {
 227   2          TI = 0; ///<清除标志
 228   2          uart_tx_irq();
 229   2        }
 230   1      }
 231          /*---------------------------------------------------------------------------*/
 232          
 233          #endif  //UART_DEV_DRIVER
 234          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.01   UART                                                                  03/08/2020 17:02:14 PAGE 5   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      20
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
