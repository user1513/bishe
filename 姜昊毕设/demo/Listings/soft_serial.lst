C51 COMPILER V9.01   SOFT_SERIAL                                                           03/05/2020 22:48:01 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SOFT_SERIAL
OBJECT MODULE PLACED IN .\output\soft_serial.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil C51\C51\BIN\C51.EXE source\soft_serial.c OMF2 DEBUG PRINT(.\Listings\so
                    -ft_serial.lst) TABS(2) PREPRINT(.\Listings\soft_serial.i) OBJECT(.\output\soft_serial.obj)

line level    source

   1          /******************************************************************************
   2          ÎÄ ¼þ Ãû   : soft_serial.c
   3          
   4          @file soft_serial.c
   5          @brief 51 IO¿ÚÄ£Äâ´®¿Ú
   6          
   7          ******************************************************************************/
   8          
   9          /*----------------------------------------------*
  10           * °üº¬Í·ÎÄ¼þ                                   *
  11           *----------------------------------------------*/
  12          #include "main.h"
  13          
  14          #ifdef SOFT_SERIAL
  15          /*----------------------------------------------*
  16           * ºê¶¨Òå                                 *
  17           *----------------------------------------------*/
  18          
  19          ///Ä£Äâ´®¿Ú Èí¼þ·¢ËÍÒý½Å¶¨Òå
  20          sbit soft_serial_tx_pin = P2^0;
  21          
  22          #define soft_serial_tx_set()      soft_serial_tx_pin = 1
  23          #define soft_serial_tx_reset()    soft_serial_tx_pin = 0
  24          
  25          #define SOFT_SERIAL_BAUD          115200 //4800/9600/38400/57600/115200
  26          
  27          sbit ACC0 = ACC^0;
  28          sbit ACC1 = ACC^1;
  29          sbit ACC2 = ACC^2;
  30          sbit ACC3 = ACC^3;
  31          sbit ACC4 = ACC^4;
  32          sbit ACC5 = ACC^5;
  33          sbit ACC6 = ACC^6;
  34          sbit ACC7 = ACC^7;
  35          /*----------------------------------------------*
  36           * Ã¶¾Ù¶¨Òå                            *
  37           *----------------------------------------------*/
  38          
  39          /*----------------------------------------------*
  40           * ½á¹¹Ìå¶¨Òå                              *
  41           *----------------------------------------------*/
  42          
  43          /*----------------------------------------------*
  44           * Íâ²¿º¯ÊýÔ­ÐÍËµÃ÷                                     *
  45           *----------------------------------------------*/
  46          
  47          /*----------------------------------------------*
  48           * ÄÚ²¿º¯ÊýÔ­ÐÍËµÃ÷                                   *
  49           *----------------------------------------------*/
  50          
  51          /*----------------------------------------------*
  52           * È«¾Ö±äÁ¿                                     *
  53           *----------------------------------------------*/
  54          
C51 COMPILER V9.01   SOFT_SERIAL                                                           03/05/2020 22:48:01 PAGE 2   

  55          /*----------------------------------------------*
  56           * ³£Á¿¶¨Òå                                       *
  57           *----------------------------------------------*/
  58          //static code uint8_t bit_dly = 104;///<¼ÆËãµçÆ½ÑÓÊ±: 1000000U/SOFT_SERIAL_BAUD
  59          
  60          /*---------------------------------------------------------------------------*/
  61          /**
  62          *@brief  Ä£Äâ´®¿Ú,Èí¼þÑÓÊ±¼ÆËã(ÔÚ11.05926¾§ÕñÏÂ¼ÆËãµÃµ½)
  63          *
  64          *
  65          *@param none
  66          *
  67          *@return 
  68          * 
  69          *
  70          *@note ¸øÒý½Å¸³ÖµÓï¾äÈç: soft_serial_tx_pin = ACC0, ²é¿´»ã±à´úÂë¿ÉÖª,¸ÃÌõÖ¸ÁîÏàµ±ÓÚ2Ìõ»ã±à´úÂë,Òò´ËÑÓÊ±Ê±¼
             -äÒª¼õ2Î¢Ãî
  71          *
  72          */
  73          static void soft_serial_delay(void)
  74          {
  75   1      #if (SOFT_SERIAL_BAUD == 115200)///<ÑÓÊ±Ê±¼ä: 8us - 2us
  76   1        _nop_();
  77   1      #elif (SOFT_SERIAL_BAUD == 9600)
                unsigned char i;///<ÑÓÊ±Ê±¼ä: 104us - 2us
                _nop_();
                i = 44;
                while (--i);
              #elif (SOFT_SERIAL_BAUD == 57600)
                unsigned char i;///<ÑÓÊ±Ê±¼ä: 17us - 2us
                i = 4;
                while (--i);
              #elif (SOFT_SERIAL_BAUD == 38400)
                unsigned char i;///<ÑÓÊ±Ê±¼ä: 26us - 2us
                _nop_();
                i = 8;
                while (--i);
              #elif (SOFT_SERIAL_BAUD == 4800)
                unsigned char i;///<ÑÓÊ±Ê±¼ä: 208us - 2us
                i = 92;
                while (--i);
              #endif
  96   1      }
  97          
  98          
  99          /*---------------------------------------------------------------------------*/
 100          /**
 101          *@brief Èí¼þÄ£Äâ´®¿Ú³õÊ¼»¯
 102          *
 103          *
 104          *@param none
 105          *
 106          *@return 
 107          * 
 108          *
 109          *@note 9600²¨ÌØÂÊ
 110          *
 111          */
 112          void soft_serial_init(void)
 113          {
 114   1        soft_serial_tx_set();
 115   1      }
C51 COMPILER V9.01   SOFT_SERIAL                                                           03/05/2020 22:48:01 PAGE 3   

 116          /*---------------------------------------------------------------------------*/
 117          /**
 118          *@brief Ä£Äâ´®¿Ú·¢ËÍÒ»¸ö×Ö·û
 119          *
 120          *
 121          *@param ch:Òª·¢ËÍµÄ×Ö·û´®
 122          *
 123          *@return 
 124          * 
 125          *
 126          *@note 9600²¨ÌØÂÊ
 127          *
 128          */
 129          void soft_serial_putchar(uint8_t const ch)
 130          {
 131   1        ACC = ch;
 132   1        
 133   1        __disable_irq();
 134   1        ///ÎªÁË¼ÆËãÊ±¼ä¾«È·,ÕâÀï²»Ê¹ÓÃÑ­»·
 135   1        soft_serial_tx_reset();///<ÆðÊ¼ÐÅºÅ
 136   1        soft_serial_delay();
 137   1      
 138   1        soft_serial_tx_pin = ACC0;///<ÏÈËÍ³öµÍÎ»,²é¿´»ã±à´úÂë¿ÉÖª,¸ÃÌõÖ¸ÁîÏàµ±ÓÚ2Ìõ»ã±à´úÂë,Òò´ËÑÓÊ±Ê±¼äÒª¼õ2Î¢Ã
             -î
 139   1        soft_serial_delay();
 140   1      
 141   1        soft_serial_tx_pin = ACC1;
 142   1        soft_serial_delay();
 143   1      
 144   1        soft_serial_tx_pin = ACC2;
 145   1        soft_serial_delay();
 146   1      
 147   1        soft_serial_tx_pin = ACC3;
 148   1        soft_serial_delay();
 149   1      
 150   1        soft_serial_tx_pin = ACC4;
 151   1        soft_serial_delay();
 152   1      
 153   1        soft_serial_tx_pin = ACC5;
 154   1        soft_serial_delay();
 155   1      
 156   1        soft_serial_tx_pin = ACC6;
 157   1        soft_serial_delay();
 158   1      
 159   1        soft_serial_tx_pin = ACC7;
 160   1        soft_serial_delay();
 161   1      
 162   1        soft_serial_tx_set();///<Í£Ö¹ÐÅºÅ
 163   1        soft_serial_delay();
 164   1        
 165   1        __enable_irq();
 166   1      }
 167          /*---------------------------------------------------------------------------*/
 168          /**
 169          *@brief Ä£Äâ´®¿Ú·¢ËÍÊý¾Ý
 170          *
 171          *
 172          *@param buf: Êý¾ÝÖ¸Õë
 173          *@param size: ·¢ËÍÊý¾Ý³¤¶È
 174          *
 175          *@return 
 176          * 
C51 COMPILER V9.01   SOFT_SERIAL                                                           03/05/2020 22:48:01 PAGE 4   

 177          *
 178          *@note 9600²¨ÌØÂÊ
 179          *
 180          */
 181          void soft_serial_transimt(const uint8_t * buf, uint16_t size)
 182          {
 183   1        uint16_t i = 0;
 184   1      
 185   1        if(buf == NULL){
 186   2          return;
 187   2        }
 188   1        
 189   1        for(i = 0; i < size; i++){
 190   2          soft_serial_putchar(buf[i]);
 191   2        }
 192   1      
 193   1      }
 194          #endif//SOFT_SERIAL
 195          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    129    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
