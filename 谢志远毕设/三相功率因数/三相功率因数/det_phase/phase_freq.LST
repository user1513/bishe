C51 COMPILER V9.60.0.0   PHASE_FREQ                                                        05/12/2020 17:26:02 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PHASE_FREQ
OBJECT MODULE PLACED IN phase_freq.OBJ
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE phase_freq.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          
   3          #define uchar unsigned char
   4          #define uint unsigned int
   5          
   6          sbit lcdrs=P0^0;                   //LCD RSÒý½ÅÉùÃ÷
   7          sbit lcdrw=P0^1;                   //LCD RWÒý½ÅÉùÃ÷
   8          sbit lcden=P0^2;                   //LCD EÒý½ÅÉùÃ÷
   9          
  10          sbit addr_a=P1^2;                  //¶àÂ·Ñ¡ÔñÆ÷Ñ¡ÔñµØÖ·a
  11          sbit addr_b=P1^3;                  //¶àÂ·Ñ¡ÔñÆ÷Ñ¡ÔñµØÖ·b
  12          
  13          sbit pulse_a=P3^2;                //Âö³åÊäÈëÒý½Å
  14          sbit pulse_b=P3^3;                //Âö³åÊäÈëÒý½Å
  15          
  16          sfr T2MOD  = 0x0C9;              //¶¨Ê±Æ÷2tmod¼Ä´æÆ÷ÉùÃ÷
  17          
  18          
  19          uchar flag_phase = 0;    
  20          uchar flag_freq = 0;
  21          
  22          
  23          //0~360¡ãµÄÓàÏÒÖµÀ©´ó10000±¶£¬·½±ã´¦Àí
  24          int code cos_table[361]= {
  25          10000,9998,9993,9986,9975,9961,9945,9925,9902,9876,9848,9816,9781,9743,9702,9659,9612,9563,9510,9455,9396,
             -9335,9271,9205,9135,9063,8987,8910,8829,8746,
  26          8660,8571,8480,8386,8290,8191,8090,7986,7880,7771,7660,7547,7431,7313,7193,7071,6946,6819,6691,6560,6427,6
             -293,6156,6018,5877,5735,5591,5446,5299,
  27          5150,5000,4848,4694,4539,4383,4226,4067,3907,3746,3583,3420,3255,3090,2923,2756,2588,2419,2249,2079,1908,1
             -736,1564,1391,1218,1045,871,697,523,
  28          348,174,0,-174,-348,-523,-697,-871,-1045,-1218,-1391,-1564,-1736,-1908,-2079,-2249,-2419,-2588,-2756,-2923
             -,-3090,-3255,-3420,-3583,-3746,-3907,-4067,-4226,-4383,
  29          -4539,-4694,-4848,-4999,-5150,-5299,-5446,-5591,-5735,-5877,-6018,-6156,-6293,-6427,-6560,-6691,-6819,-694
             -6,-7071,-7193,-7313,-7431,-7547,-7660,-7771,-7880,-7986,-8090,-8191,
  30          -8290,-8386,-8480,-8571,-8660,-8746,-8829,-8910,-8987,-9063,-9135,-9205,-9271,-9335,-9396,-9455,-9510,-956
             -3,-9612,-9659,-9702,-9743,-9781,-9816,-9848,-9876,-9902,-9925,-9945,
  31          -9961,-9975,-9986,-9993,-9998,-10000,-9998,-9993,-9986,-9975,-9961,-9945,-9925,-9902,-9876,-9848,-9816,-97
             -81,-9743,-9702,-9659,-9612,-9563,-9510,-9455,-9396,-9335,-9271,-9205,
  32          -9135,-9063,-8987,-8910,-8829,-8746,-8660,-8571,-8480,-8386,-8290,-8191,-8090,-7986,-7880,-7771,-7660,-754
             -7,-7431,-7313,-7193,-7071,-6946,-6819,-6691,-6560,-6427,-6293,-6156,
  33          -6018,-5877,-5735,-5591,-5446,-5299,-5150,-5000,-4848,-4694,-4539,-4383,-4226,-4067,-3907,-3746,-3583,-342
             -0,-3255,-3090,-2923,-2756,-2588,-2419,-2249,-2079,-1908,-1736,-1564,
  34          -1391,-1218,-1045,-871,-697,-523,-348,-174,0,174,348,523,697,871,1045,1218,1391,1564,1736,1908,2079,2249,2
             -419,2588,2756,2923,3090,3255,3420,
  35          3583,3746,3907,4067,4226,4383,4539,4694,4848,4999,5150,5299,5446,5591,5735,5877,6018,6156,6293,6427,6560,6
             -691,6819,6946,7071,7193,7313,7431,7547,
  36          7660,7771,7880,7986,8090,8191,8290,8386,8480,8571,8660,8746,8829,8910,8987,9063,9135,9205,9271,9335,9396,9
             -455,9510,9563,9612,9659,9702,9743,9781,
  37          9816,9848,9876,9902,9925,9945,9961,9975,9986,9993,9998,10000
  38          };
  39          
  40          uint freqs;
  41          volatile uint phase;
  42          
  43          void delay(uint z)                                      //ÑÓÊ±º¯Êý
C51 COMPILER V9.60.0.0   PHASE_FREQ                                                        05/12/2020 17:26:02 PAGE 2   

  44          {                                                                       
  45   1              uint i,j;
  46   1              for(i=110;i>0;i--)                              //½øÐÐn*110´ÎµÄ¿ØÖÆÁãÑÓÊ±
  47   1                      for(j=z;j>0;j--);
  48   1      }
  49          void write_com(uchar com)                                                  //¶ÔLCD1602Ð´Ö¸Áî²Ù×÷£¬Ê±Ðò¿É¿´Ð¾Æ¬ÊÖ²á
  50          {
  51   1      
  52   1              lcdrs=0;
  53   1              P2=com;
  54   1              delay(5);
  55   1              lcden=1;
  56   1              delay(5);
  57   1              lcden=0;
  58   1      }
  59          void write_data(uchar dat)                                               //¶ÔLCD1602Ð´Êý¾Ý²Ù×÷£¬Ê±Ðò¿É¿´Ð¾Æ¬ÊÖ²á
  60          {
  61   1              lcdrs=1;
  62   1              P2=dat;
  63   1              delay(5);
  64   1              lcden=1;
  65   1              delay(5);
  66   1              lcden=0;
  67   1      }
  68          
  69          void lcd_init()                                                           //³õÊ¼»¯LCD£¬²¢ÇÒ¹â±ê´ÓµÚÒ»ÐÐµÚÒ»¸öÎ»ÖÃ¿ªÊ¼Ð´
  70          {
  71   1              lcden=0;
  72   1              lcdrw = 0 ;
  73   1              write_com(0x38);
  74   1              write_com(0x0c);
  75   1              write_com(0x06);
  76   1              write_com(0x01);
  77   1              write_com(0x80);
  78   1      
  79   1      }
  80          void display_res(uchar channle_num, uint pos, uint d_tab, uint angle_cos)                                               //¸ù¾ÝÊäÈëµÄÍ¨µÀ£¬ÏÔÊ¾µÄÎ»Ö
             -Ã £¬ÏÔÊ¾×îÖÕÏàÎ»²îºÍ¹¦ÂÊ
  81          {
  82   1              uchar a3 = 0;
  83   1              uchar a,b,c,d,e = 0;
  84   1              a = d_tab / 10000;                                                //Çó³ö¸÷¸öÎ»ÉÏµÄÖµ
  85   1              b = d_tab / 1000 %10;                                     //ÀýÈç12345 => 1 2 3 4 5
  86   1              c = d_tab /100 %10;
  87   1              d = d_tab /10 % 10;
  88   1              e = d_tab % 10;;
  89   1              write_com(0x80+pos);                                    //³õÊ¼»¯LCD¹â±êÎ»ÖÃ
  90   1      
  91   1              write_data(0x30+ channle_num);                  //Ð´Èë¸üÐÂµÄÍ¨µÀÊý
  92   1              write_data(':');                                                //Ð´¸öÃ°ºÅ
  93   1              if(a == 0)                                                              //Èç¹ûÊ×Î»Îª0£¬Ôò¿Õ×Å
  94   1                      write_data(' ');
  95   1              else            
  96   1                      write_data(0x30+a);                                      //Èç¹ûµÚ¶þÎ»Îª0£¬Ôò¿Õ×Å
  97   1              if(a== 0 & b ==0)
  98   1                      write_data(' ');
  99   1              else
 100   1                      write_data(0x30+b);
 101   1              write_data(0x30+c);                                        //Ö¤Êé²¿·Ö¸üÐÂÍê±Ï
 102   1              write_data('.');                                           //Ìí¼ÓÐ¡Êýµã
 103   1              write_data(0x30+d);                                        //ÏÔÊ¾Ð¡Êý²¿·Ö
 104   1              write_data(0x30+e);
C51 COMPILER V9.60.0.0   PHASE_FREQ                                                        05/12/2020 17:26:02 PAGE 3   

 105   1      
 106   1              b = angle_cos / 1000;                              //Çó³ö¸÷¸öÎ»ÉÏµÄÖµ
 107   1              c = angle_cos /100 %10;                            //ÀýÈç1234 => 1 2 3 4
 108   1              d = angle_cos /10 % 10;
 109   1              e = angle_cos % 10;
 110   1      
 111   1      
 112   1              write_com(0x80 + 0x42);                          //lcd¹â±ê´ÓµÚ¶þÐÐµÚÈýÎ»ÖÃ¿ªÊ¼Ð´
 113   1              write_data('0');                                         //ÓÉÓÚÓàÏÒ¶¼ÊÇÐ¡Êý£¬ÕûÊý²¿·Ö¹Ì¶¨0
 114   1              write_data('.');                                         //Ìí¼ÓÐ¡Êýµã
 115   1              write_data(0x30+b);                                      //ÏÔÊ¾4Î»Ð¡Êý²¿·Ö
 116   1              write_data(0x30+c);
 117   1              write_data(0x30+d);
 118   1              write_data(0x30+e);
 119   1              
 120   1              
 121   1              write_com(0x02);                                         //ÏÔÊ¾Íê±Ï
 122   1      }
 123          
 124          void timer_ExInt_init()                                  //¶¨Ê±Æ÷³õÊ¼»¯
 125          {       
 126   1      //      EX0 = 1;
 127   1      //      EX1 = 1;
 128   1      //      IT0 = 1;
 129   1      //      IT1 = 1;
 130   1                                                                                        
 131   1              TMOD = 0x10;                                       //¶¨Ê±Æ÷2¹¤×÷ÔÚ·½Ê½1
 132   1      
 133   1              TH1 = 0;                                                  //Ìî³õÖµ0.´Ó0¿ªÊ¼¼ÆÊý
 134   1              TL1 = 0;
 135   1      
 136   1              TR1 = 0;                                                   //¹Ø±Õ¶¨Ê±Æ÷
 137   1              EA=1;                                                                                                     //¿ªÆôÖÐ¶Ï¿ª¹Ø¿ÉÓÐ¿ÉÎÞ
 138   1      }
 139          
 140          
 141          void uart_init()
 142          {
 143   1              SCON=0x40;
 144   1              PCON = 0X00;                            //²¨ÌØÂÊ²»¼Ó±¶
 145   1              REN=1;                                          //·¢ËÍ½ÓÊÕÊÇÄÜ
 146   1              T2MOD = 0X01;
 147   1              T2CON = 0X30;                           //ÉèÖÃT2Î»²¨ÌØÂÊÊ±ÖÓ
 148   1              RCAP2H = 0xff;                          //65536-11059200/32¡Á9600
 149   1              RCAP2L = 0xd9;                          //³õÊ¼»¯¼ÆÊýÖµ 11.0592Mhz 9600²¨ÌØÂÊ
 150   1              TH2 = 0xff;                                     //³õÊ¼»¯¼ÆÊýÖµ 11.0592Mhz 9600²¨ÌØÂÊ
 151   1              TL2 = 0xd9;                               
 152   1              SM0=0;                                          //´®¿ÚÄ£Ê½8ÎªÊý¾ÝÎª£¬1Î»Í£Ö¹Î»
 153   1              SM1=1;                                          //´®¿ÚÄ£Ê½8ÎªÊý¾ÝÎª£¬1Î»Í£Ö¹Î»
 154   1              TR2=1;                                          //¶¨Ê±Æ÷2¿ªÊ¼¼ÆÊý
 155   1              TI=0;                                           //Çå³ýÖÐ¶Ï±êÖ¾Î»
 156   1      }
 157          
 158          
 159          
 160          void send_char(uchar dat)               //·¢ËÍÒ»¸ö×Ö½ÚÊý¾Ý
 161          {
 162   1              SBUF=dat;                                       //·¢ËÍÊý¾Ý
 163   1              while(!TI);                                 //µÈ´ý·¢ËÍÊÇ·ñÍê³É
 164   1              TI=0;
 165   1      }
 166          
C51 COMPILER V9.60.0.0   PHASE_FREQ                                                        05/12/2020 17:26:02 PAGE 4   

 167          void send_num(uint num)         //·¢ËÍÒ»¸ö×Ö½ÚÊý¾Ý
 168          {
 169   1              int i;
 170   1              uchar tab[2] = {0};
 171   1      
 172   1              tab[0] = (num & 0xff00) >> 8;      //·¢ËÍ¹¦ÂÊÊý¾Ý£¬À©´ó10000±¶µÄ£¬·½±ãÉÏÎ»»ú´¦Àí£¬¸ßÎ»ÔÚÇ°£¬µÍÎ»ÔÚºó
 173   1              tab[1] = (num & 0x00ff);
 174   1                       
 175   1              for(i=0;i<2;i++)                        //½«ËùÓÐÊý¾Ý·¢ËÍ³öÈ¥
 176   1              {
 177   2                      send_char(tab[i]);
 178   2              }
 179   1      }
 180          
 181          
 182          void main()
 183          {
 184   1              uint Ch_num = 0;
 185   1              float ratio = 0;
 186   1              float angle = 0;
 187   1              uint uart_str[6] = {0};
 188   1              char uart_num = 0;
 189   1              uint anle_100 = 0;
 190   1              uint angle_int = 0;
 191   1              addr_b = 0;
 192   1              addr_a = 0;
 193   1              lcd_init();
 194   1              timer_ExInt_init();
 195   1              uart_init();
 196   1              while(1)
 197   1              {
 198   2                      while(pulse_a);                                            //¼ì²âÂö³å1µÄÉÏÉýÑØ
 199   2                      while(!pulse_a);
 200   2                      TR1 = 1;                                                                //¿ª¶¨Ê±Æ÷¼ÆÊý
 201   2                      while(pulse_b);                                                 //¼ì²âÂö³å2µÄÉÏÉýÑØ
 202   2                      while(!pulse_b);                                                
 203   2                      TR1 = 0;                                                                //¹Ø±Õ¶¨Ê±Æ÷1
 204   2                      phase = (TH1 << 8) + TL1;                               //¼ÇÂ¼¼ÆÊýÖµ£¬´ËÎªÏàÎ»²îÖµ
 205   2                      TR1 = 1;                                                                //¿ª¶¨Ê±Æ÷1,
 206   2                      while(pulse_a);                                                 //¼ì²âÂö³å1µÄÉÏÉýÑØ
 207   2                      while(!pulse_a);
 208   2                      TR1 = 0;                                                                 //¶¨Ê±Æ÷1¹Ø±Õ
 209   2                      freqs = (TH1 << 8) + TL1 + 15;                   //¼ÇÂ¼¶¨Ê±Æ÷µÄÖµ£¬¼ÓÉÏÒ»¸öÎó²îÐÞÕý
 210   2                      TH1 = 0;                                                                 //¶¨Ê±Æ÷¼ÆÊýÉè³õÖµ
 211   2                      TL1 = 0;                                                                 //¶¨Ê±Æ÷¼ÆÊýÉè³õÖµ
 212   2      //              display_res(0,phase);
 213   2      //              display_res(0x40,freqs);
 214   2      
 215   2                      ratio = (float)phase / (float)freqs;      //Çó³öÏàÎ»²îµÄ±ÈÀý
 216   2                      angle = 360 * ratio;                                      //Çó³öÏàÎ»²îµÄµÄ½Ç¶È
 217   2                      anle_100 = angle * 100;                                   //½Ç¶ÈÀ©´ó100±¶ÓÃÓÚLCDÏÔÊ¾Ð¡Êýµã
 218   2                      angle_int = (uint)angle;                                  //»ñµÃÕûÊýµÄ½Ç¶ÈÖµ
 219   2                      display_res(Ch_num,0,anle_100, cos_table[angle_int]);   //µ÷ÓÃÏÔÊ¾º¯Êý£¬ÏÔÊ¾Í¨µÀ£¬Î»ÖÃ£¬½Ç¶È£¬ÒÔ¼°¹¦ÂÊÖµ
 220   2                      uart_str[Ch_num * 2] = anle_100 ;                 //´æÈë½Ç¶ÈÖµ
 221   2                      uart_str[Ch_num * 2 + 1] =      cos_table[angle_int];//´æÈë¹¦ÂÊÒòÊý
 222   2                      send_num(0X55AA);
 223   2                      for(uart_num = 0; uart_num < 6; uart_num++)
 224   2                      {
 225   3                              send_num(uart_str[uart_num]);
 226   3                      }
 227   2                      //send_num(cos_table[angle_int]);                               //·¢ËÍ¹¦ÂÊµÄÀ©´ó10000±¶Öµ¸øÉÏÎ»»ú
 228   2                      Ch_num = Ch_num + 1;                                            //Í¨µÀÊý+1
C51 COMPILER V9.60.0.0   PHASE_FREQ                                                        05/12/2020 17:26:02 PAGE 5   

 229   2                      if(Ch_num == 3)                                                         //Ò»¹²Èý¸öÍ¨µÀ£¬¼ÆÊýµ½ÈýÇåÁã
 230   2                              Ch_num = 0;
 231   2                      addr_a = Ch_num & 0x1;                                          //Í¨µÀÊý½øÐÐµØÖ·ÒëÂë
 232   2                      addr_b = Ch_num & 0x2;                                          //Í¨µÀÊý½øÐÐµØÖ·ÒëÂë
 233   2                      delay(50);                                                                      //ÑÓÊ±Ò»»á½øÐÐÏÂ´Î²âÁ¿
 234   2              }       
 235   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    921    ----
   CONSTANT SIZE    =    736    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      43
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
